Search.setIndex({"docnames": ["examples/tabular_explanations_example", "index", "source/lore_sa", "source/lore_sa.dataset", "source/lore_sa.decision_tree", "source/lore_sa.discretizer", "source/lore_sa.encoder_decoder", "source/lore_sa.explanation", "source/lore_sa.lorem", "source/lore_sa.neighgen", "source/lore_sa.rule", "source/lore_sa.surrogate", "source/lore_sa.util", "source/modules"], "filenames": ["examples\\tabular_explanations_example.rst", "index.rst", "source\\lore_sa.rst", "source\\lore_sa.dataset.rst", "source\\lore_sa.decision_tree.rst", "source\\lore_sa.discretizer.rst", "source\\lore_sa.encoder_decoder.rst", "source\\lore_sa.explanation.rst", "source\\lore_sa.lorem.rst", "source\\lore_sa.neighgen.rst", "source\\lore_sa.rule.rst", "source\\lore_sa.surrogate.rst", "source\\lore_sa.util.rst", "source\\modules.rst"], "titles": ["Learning and explaining German Credit Dataset", "lore_sa", "lore_sa package", "lore_sa.dataset", "lore_sa.decision_tree", "lore_sa.discretizer", "lore_sa.encoder_decoder", "lore_sa.explanation", "lore_sa.lorem", "lore_sa.neighgen", "lore_sa.rule", "lore_sa.surrogate", "lore_sa.util", "Modules"], "terms": {"import": 0, "panda": 0, "pd": 0, "numpi": [0, 2], "np": 0, "from": [0, 2], "sklearn": 0, "preprocess": [0, 2], "ensembl": 0, "randomforestclassifi": 0, "model_select": 0, "train_test_split": 0, "linear_model": 0, "logisticregress": 0, "xailib": 0, "data_load": 0, "dataframe_load": 0, "prepare_datafram": [0, 2], "lime_explain": 0, "limexaitabularexplain": 0, "lore_explain": 0, "loretabularexplain": 0, "shap_explainer_tab": 0, "shapxaitabularexplain": 0, "sklearn_classifier_wrapp": 0, "we": [0, 2], "start": [0, 2], "read": 0, "csv": [0, 2], "file": 0, "analyz": 0, "The": [0, 2], "tabl": 0, "i": [0, 2], "mean": [0, 2], "datafram": [0, 2], "class": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11], "librari": 0, "among": 0, "all": [0, 2], "attribut": [0, 2], "select": [0, 2], "class_field": [0, 2], "column": [0, 2], "contain": [0, 2], "observ": 0, "correspond": 0, "row": 0, "source_fil": 0, "german_credit": 0, "default": [0, 2], "transform": [0, 2], "df": [0, 2], "read_csv": 0, "skipinitialspac": 0, "true": [0, 2], "na_valu": 0, "keep_default_na": 0, "after": [0, 2], "memori": 0, "need": [0, 2], "extract": [0, 2], "metadata": 0, "inform": [0, 2], "automat": 0, "handl": [0, 2], "content": 0, "withint": 0, "method": [0, 2], "scan": [0, 2], "follow": [0, 2], "trasform": [0, 2], "version": [0, 2], "origin": [0, 2], "where": [0, 2], "discret": [0, 1], "ar": [0, 2], "numer": [0, 2], "us": [0, 2], "one": [0, 2], "hot": [0, 2], "encod": [0, 2], "strategi": [0, 2], "feature_nam": [0, 2], "list": [0, 2], "containint": [0, 2], "name": [0, 2], "featur": [0, 2], "class_valu": [0, 2], "possibl": [0, 2], "valu": [0, 2], "numeric_column": [0, 2], "e": [0, 2], "continu": [0, 2], "rdf": [0, 2], "befor": [0, 2], "real_feature_nam": [0, 2], "features_map": [0, 2], "dictionari": [0, 2], "point": [0, 2], "each": [0, 2], "train": [0, 2], "rf": 0, "classifi": 0, "split": 0, "test": 0, "subset": 0, "test_siz": 0, "0": [0, 2], "3": [0, 2], "random_st": [0, 2], "42": 0, "x_train": 0, "x_test": 0, "y_train": 0, "y_test": 0, "stratifi": 0, "Then": 0, "set": 0, "onc": 0, "ha": 0, "been": 0, "wrapper": 0, "get": 0, "access": 0, "xai": 0, "lib": 0, "bb": [0, 2], "n_estim": 0, "20": 0, "fit": [0, 2], "bbox": 0, "new": [0, 2], "instanc": [0, 2], "classfi": 0, "print": 0, "inst": 0, "iloc": 0, "147": 0, "8": 0, "reshap": 0, "1": [0, 2], "15": 0, "975": 0, "2": [0, 2], "25": 0, "explan": [0, 1], "provid": [0, 2], "an": [0, 2], "explant": 0, "everi": [0, 2], "take": [0, 2], "input": 0, "blackbox": [0, 2], "configur": [0, 2], "object": [0, 2], "initi": [0, 2], "config": [0, 2], "tree": [0, 2], "100": [0, 2], "exp": 0, "plot_features_import": 0, "neigh_typ": 0, "rndgen": 0, "size": [0, 2], "1000": [0, 2], "ocr": [0, 2], "ngen": [0, 2], "10": [0, 2], "plotrul": 0, "plotcounterfactualrul": 0, "limeexplain": 0, "feature_select": 0, "lasso_path": 0, "lime_exp": 0, "as_list": 0, "account_check_statu": 0, "check": [0, 2], "account": 0, "03792512128083548": 0, "duration_in_month": 0, "03701527256562679": 0, "dm": 0, "03144299031649348": 0, "save": 0, "020051934530021572": 0, "ag": 0, "019751080001761446": 0, "credit_histori": 0, "critic": 0, "other": 0, "exist": 0, "thi": [0, 2], "bank": [0, 2], "018970043296280513": 0, "other_installment_plan": 0, "none": [0, 2], "018869997928840695": 0, "017658677626390982": 0, "hous": 0, "own": 0, "014948467979451343": 0, "delai": 0, "pai": 0, "off": 0, "past": 0, "012221985897781883": 0, "plot_lime_valu": 0, "5": [0, 2], "regress": 0, "scaler": 0, "normal": 0, "standardscal": 0, "x_scale": 0, "c": 0, "penalti": 0, "l2": 0, "pass": [0, 2], "record": [0, 2], "182": 0, "27797454": 0, "35504085": 0, "94540357": 0, "07634233": 0, "04854891": 0, "72456474": 0, "43411405": 0, "65027399": 0, "61477862": 0, "25898489": 0, "80681063": 0, "4": [0, 2], "17385345": 0, "6435382": 0, "32533856": 0, "03489416": 0, "20412415": 0, "22941573": 0, "33068147": 0, "75885396": 0, "34899122": 0, "60155441": 0, "15294382": 0, "09298136": 0, "46852129": 0, "12038585": 0, "08481889": 0, "23623492": 0, "21387736": 0, "36174054": 0, "24943031": 0, "15526362": 0, "59715086": 0, "45485883": 0, "73610476": 0, "43875307": 0, "23307441": 0, "65242771": 0, "23958675": 0, "90192655": 0, "72581563": 0, "2259448": 0, "15238005": 0, "54212562": 0, "70181003": 0, "63024248": 0, "30354212": 0, "40586384": 0, "49329429": 0, "88675135": 0, "59227935": 0, "46170508": 0, "46388049": 0, "33747696": 0, "13206764": 0, "same": 0, "previou": 0, "In": [0, 2], "case": 0, "few": 0, "adjust": 0, "necessari": 0, "For": [0, 2], "exampl": [0, 1, 2], "specif": 0, "linear": 0, "feature_pert": 0, "intervent": 0, "shapxaitabularexplan": 0, "0x12a72dac8": 0, "geneticp": 0, "loretabularexplan": 0, "0x12bc41a90": 0, "why": 0, "becaus": 0, "condit": [0, 2], "happen": 0, "726173400878906credit": 0, "amount": 0, "439": 0, "6443485021591purpos": 0, "retrain": 0, "11524588242173195durat": 0, "month": 0, "9407005310058594purpos": 0, "furnitur": 0, "equip": 0, "18370826542377472foreign": 0, "worker": 0, "7168410122394562purpos": 0, "domest": 0, "applianc": 0, "015466570854187save": 0, "7176859378814697purpos": 0, "vacat": 0, "doe": 0, "4622504562139511credit": 0, "histori": 0, "9085964262485504": 0, "It": [0, 2], "would": 0, "have": [0, 2], "hold": 0, "6443485021591": 0, "26": 0, "468921303749084durat": 0, "795059680938721instal": 0, "incom": 0, "perc": 0, "603440999984741": 0, "other_debtor": 0, "co": 0, "applic": 0, "3046177878918616e": 0, "09": 0, "paid": 0, "back": 0, "duli": 0, "0114574629252053e": 0, "present_emp_sinc": 0, "unemploi": 0, "87554096296626e": 0, "7": 0, "43754044231906e": 0, "free": 0, "4157786564097103e": 0, "properti": 0, "unknown": 0, "275710719845092e": 0, "credit_amount": 0, "271233788564153e": 0, "job": 0, "manag": 0, "self": [0, 2], "emploi": [0, 2], "highli": 0, "qualifi": 0, "employe": 0, "offic": 0, "164190703926506e": 0, "8902027822084106e": 0, "604277452741881e": 0, "skill": 0, "offici": 0, "3808188198617575e": 0, "foreign_work": 0, "ye": 0, "365347360238489e": 0, "telephon": 0, "2048259721367863e": 0, "171945479826713e": 0, "1116662177987812e": 0, "credits_this_bank": 0, "9999632029038067e": 0, "till": 0, "now": 0, "9243622007776865e": 0, "people_under_mainten": 0, "902008911572941e": 0, "purpos": 0, "car": 0, "7104663723358493e": 0, "6584313433238958e": 0, "200": [0, 2], "639544710042764e": 0, "317487567892989e": 0, "unskil": 0, "resid": 0, "307761159896724e": 0, "store": 0, "2347569776391545e": 0, "1825353902253505e": 0, "year": 0, "1478921168922655e": 0, "a121": 0, "a122": 0, "6": 0, "1222769011436428e": 0, "personal_status_sex": 0, "femal": 0, "divorc": 0, "separ": [0, 2], "marri": 0, "1002871894681165e": 0, "500": [0, 2], "0982251402773794e": 0, "0567984890752028e": 0, "present_res_sinc": 0, "9": 0, "869484730455045e": 0, "11": 0, "salari": 0, "assign": 0, "least": 0, "721716212812873e": 0, "327030468700815e": 0, "installment_as_income_perc": 0, "192261925231111e": 0, "real": 0, "estat": 0, "180043418264463e": 0, "974505020571898e": 0, "848004118893571e": 0, "80910843922895e": 0, "educ": 0, "803520453193465e": 0, "busi": 0, "330599059469541e": 0, "rent": 0, "975475868460632e": 0, "build": 0, "societi": 0, "agreement": 0, "life": 0, "insur": 0, "826524390749874e": 0, "guarantor": 0, "385760952840171e": 0, "338094381227495e": 0, "689756440260244e": 0, "582965568284186e": 0, "non": 0, "473736018584135e": 0, "230002403518189e": 0, "974714318917145e": 0, "radio": 0, "televis": 0, "909852887925919e": 0, "620862803354922e": 0, "582941358078461e": 0, "501318386790144e": 0, "male": 0, "widow": 0, "500125372750834e": 0, "regist": 0, "under": 0, "custom": 0, "495252929908006e": 0, "repair": 0, "2177896575440796e": 0, "0557757647139625e": 0, "627184253632623e": 0, "singl": [0, 2], "9862189862658355e": 0, "taken": 0, "8131802175589855e": 0, "9548368945624186e": 0, "modul": 1, "lorem": 1, "neighgen": 1, "decision_tre": 1, "dataset": 1, "encoder_decod": 1, "rule": 1, "surrog": 1, "util": 1, "tabular": [1, 2], "load": 1, "prepar": [1, 2], "data": [1, 2], "learn": 1, "random": [1, 2], "forest": 1, "classfier": 1, "explain": [1, 2], "predict": [1, 2], "shap": 1, "lore": 1, "lime": 1, "differ": [1, 2], "model": [1, 2], "logist": [1, 2], "regressor": 1, "index": [1, 2], "search": 1, "page": 1, "sourc": 2, "base": 2, "interfac": 2, "imag": 2, "etc": 2, "incapsul": 2, "expos": 2, "get_class_valu": 2, "get_feature_map": 2, "get_k": 2, "get_numeric_column": 2, "get_original_dataset": 2, "prepare_adult_dataset": 2, "filenam": 2, "prepare_bank_dataset": 2, "http": 2, "www": 2, "kaggl": 2, "com": 2, "aniruddhachoudhuri": 2, "credit": 2, "risk": 2, "home": 2, "riccardo": 2, "scaricati": 2, "param": 2, "return": 2, "prepare_churn_dataset": 2, "prepare_compass_dataset": 2, "binari": 2, "fals": 2, "prepare_dataset": 2, "str": 2, "class_nam": 2, "encdec": 2, "paramet": 2, "prepare_fico_dataset": 2, "prepare_german_dataset": 2, "prepare_iris_dataset": 2, "prepare_medical_dataset": 2, "prepare_wine_dataset": 2, "prepare_yeast_dataset": 2, "is_leaf": 2, "inner_tre": 2, "whether": 2, "node": 2, "leaf": 2, "learn_local_decision_tre": 2, "z": 2, "yb": 2, "weight": 2, "multi_label": 2, "one_vs_rest": 2, "cv": 2, "prune_tre": 2, "prune_duplicate_leav": 2, "dt": 2, "remov": 2, "leav": 2, "both": 2, "prune_index": 2, "decis": 2, "prune": 2, "bottom": 2, "top": 2, "might": 2, "miss": 2, "becom": 2, "dure": 2, "do": 2, "directli": 2, "instead": 2, "abstract": 2, "x": 2, "y": 2, "kwarg": 2, "rmepdiscret": 2, "to_discret": 2, "proto_fn": 2, "array_entropi": 2, "recursive_partit": 2, "implement": 2, "which": 2, "must": 2, "function": [2, 4, 7, 10, 12], "enc": 2, "dec": 2, "enc_fit_transform": 2, "idea": 2, "user": 2, "send": 2, "complet": 2, "here": 2, "onli": 2, "categor": 2, "variabl": 2, "mytargetenc": 2, "given": 2, "appli": 2, "target": 2, "dataset_enc": 2, "get_cate_map": 2, "inverse_transform": 2, "retrieve_valu": 2, "interv": 2, "op": 2, "onehotenc": 2, "onehot": 2, "them": 2, "alreadi": 2, "extend": 2, "onehotencod": 2, "cstr": 2, "rstr": 2, "explanationencod": 2, "skipkei": 2, "ensure_ascii": 2, "check_circular": 2, "allow_nan": 2, "sort_kei": 2, "indent": 2, "jsonencod": 2, "special": 2, "json": 2, "type": 2, "obj": 2, "report": 2, "about": 2, "objgect": 2, "imageexplan": 2, "img": 2, "segment": 2, "get_image_counterfactu": 2, "hide_rest": 2, "num_featur": 2, "min_import": 2, "get_image_rul": 2, "multilabelexplan": 2, "textexplan": 2, "text": 2, "indexed_text": 2, "get_text_counterfactu": 2, "get_text_rul": 2, "json2explan": 2, "abstractbbox": 2, "dict": 2, "local": 2, "string": 2, "defin": 2, "option": 2, "unadmittible_featur": 2, "neigh_gen": 2, "filter_crul": 2, "extreme_fidel": 2, "verbos": 2, "datamanag": 2, "black": 2, "box": 2, "explain_inst": 2, "sampl": 2, "use_weight": 2, "metric": 2, "neuclidean": 2, "run": 2, "exemplar_num": 2, "n_job": 2, "express": 2, "number": 2, "gener": 2, "neighbourhood": 2, "measur": 2, "distanc": 2, "between": 2, "time": 2, "done": 2, "examplar": 2, "retriev": 2, "add": 2, "cf": 2, "explain_set_instances_st": 2, "n_worker": 2, "titl": 2, "n_sampl": 2, "explain_workers_st": 2, "use_wieght": 2, "get_exemplars_cexemplars_binari": 2, "n": 2, "get_exemplars_cexemplars_supert": 2, "get_exemplars_str": 2, "exemplars_rec": 2, "get_feature_importance_binari": 2, "get_feature_importance_supert": 2, "tot_sampl": 2, "set_unfeasibible_featur": 2, "cfsgener": 2, "bb_predict": 2, "feature_valu": 2, "nbr_featur": 2, "nbr_real_featur": 2, "numeric_columns_index": 2, "n_search": 2, "10000": 2, "n_batch": 2, "lower_threshold": 2, "upper_threshold": 2, "kind": 2, "gaussian_match": 2, "sampling_kind": 2, "stopping_ratio": 2, "01": 2, "check_upper_threshold": 2, "final_counterfactual_search": 2, "custom_sampling_threshold": 2, "custom_closest_counterfactu": 2, "balanc": 2, "cut_radiu": 2, "forced_balance_ratio": 2, "downward_onli": 2, "neighborhoodgener": 2, "binary_sampling_search": 2, "x_label": 2, "counterfactual_search": 2, "gaussian_global_sampl": 2, "gaussian_vicinity_sampl": 2, "epsilon": 2, "num_sampl": 2, "synthet": 2, "orgin": 2, "ani": 2, "seed": 2, "int": 2, "neighborhood": 2, "neighborhood_sampl": 2, "translat": 2, "center": 2, "arrai": 2, "axi": 2, "uniform_sphere_origin": 2, "d": 2, "r": 2, "num_point": 2, "dimens": 2, "uniform": 2, "probabl": 2, "over": 2, "unit": 2, "ball": 2, "scale": 2, "radiu": 2, "length": 2, "rang": 2, "dimension": 2, "float": 2, "sphere": 2, "shape": 2, "uniform_sphere_scaled_vicinity_sampl": 2, "threshold": 2, "uniform_sphere_vicinity_sampl": 2, "vicinity_sampl": 2, "closestinstancesgener": 2, "k": 2, "rk": 2, "core_neigh_typ": 2, "unifi": 2, "alphaf": 2, "alphal": 2, "metric_featur": 2, "metric_label": 2, "ham": 2, "categorical_use_prob": 2, "continuous_fun_estim": 2, "countergener": 2, "bb_predict_proba": 2, "original_data": 2, "alpha1": 2, "alpha2": 2, "mutpb": 2, "random_se": 2, "cxpb": 2, "tournsiz": 2, "halloffame_ratio": 2, "closest": 2, "max_count": 2, "counterfactu": 2, "code": 2, "henc": 2, "latent": 2, "space": 2, "create_bin": 2, "bin": 2, "feature_bin": 2, "find_closest_count": 2, "counter_list": 2, "inserisco": 2, "un": 2, "per": 2, "ogni": 2, "combinazion": 2, "di": 2, "il": 2, "maggiorment": 2, "vicino": 2, "clost": 2, "ho": 2, "con": 2, "le": 2, "che": 2, "sono": 2, "state": 2, "cambiat": 2, "quando": 2, "trovato": 2, "cerco": 2, "piu": 2, "generando": 2, "caso": 2, "tra": 2, "l": 2, "original": 2, "nuovo": 2, "find_in_poss": 2, "n_iter": 2, "for_loop_count": 2, "n_feat": 2, "geneticgener": 2, "add_halloffam": 2, "popul": 2, "halloffam": 2, "clone": 2, "toolbox": 2, "population_s": 2, "fitness_equ": 2, "x1": 2, "fitness_notequ": 2, "mutat": 2, "random_init": 2, "record_init": 2, "setup_toolbox": 2, "evalu": 2, "setup_toolbox_noteq": 2, "geneticprobagener": 2, "fitness_equal_proba": 2, "fitness_notequal_proba": 2, "apply_bb_predict": 2, "apply_bb_predict_proba": 2, "balance_neigh": 2, "generate_synthetic_inst": 2, "from_z": 2, "multi_gener": 2, "randomgener": 2, "randomgeneticgener": 2, "randomgeneticprobagener": 2, "att": 2, "thr": 2, "is_continu": 2, "conditionencod": 2, "subclass": 2, "serializ": 2, "o": 2, "call": 2, "rais": 2, "typeerror": 2, "support": 2, "arbitrari": 2, "iter": 2, "you": 2, "could": 2, "like": 2, "def": 2, "try": 2, "except": 2, "els": 2, "let": 2, "numpyencod": 2, "premis": 2, "is_cov": 2, "ruleencod": 2, "apply_counterfactu": 2, "delta": 2, "features_map_inv": 2, "apply_counterfactual_supert": 2, "check_feasibility_of_falsified_condit": 2, "compact_premis": 2, "plist": 2, "get_counterfactual_rul": 2, "constraint": 2, "get_counterfactual_rules_supert": 2, "get_depth": 2, "get_falsified_condit": 2, "xd": 2, "crule": 2, "get_rul": 2, "get_rule_supert": 2, "json2cond": 2, "json2rul": 2, "dectre": 2, "supertre": 2, "feat_num": 2, "thresh": 2, "label": 2, "impur": 2, "print_tre": 2, "level": 2, "supernod": 2, "children": 2, "calculate_all_import": 2, "calculate_features_import": 2, "tot": 2, "calculate_fi_path": 2, "decision_path_indic": 2, "print_supertre": 2, "set_impur": 2, "check_siz": 2, "complexitisupertre": 2, "complexitydecisiontre": 2, "computebranch": 2, "nodenr": 2, "intervalif": 2, "attributexf": 2, "mergedecisiontre": 2, "root": 2, "num_class": 2, "pruneredund": 2, "bigtre": 2, "xf": 2, "rec_buildtre": 2, "decisiontreeclassifi": 2, "feature_us": 2, "supert2b": 2, "supert": 2, "supert2binari": 2, "newn": 2, "best_fit_distribut": 2, "ax": 2, "find": 2, "best": 2, "distribut": 2, "calculate_feature_valu": 2, "estimate_nbr_bin": 2, "freedman_diaconi": 2, "get_distr_valu": 2, "mixed_distance_idx": 2, "idx": 2, "ddist": 2, "jaccard": 2, "cdist": 2, "multi_dt_predict": 2, "dt_list": 2, "multilabel2str": 2, "nmeandev": 2, "record2str": 2, "sigmoid": 2, "x0": 2, "A": 2, "curv": 2, "common": 2, "": 2, "midpoint": 2, "maximum": 2, "steep": 2, "struge": 2, "vector2dict": 2}, "objects": {"": [[2, 0, 0, "-", "lore_sa"]], "lore_sa": [[3, 0, 0, "-", "dataset"], [4, 0, 0, "-", "decision_tree"], [5, 0, 0, "-", "discretizer"], [6, 0, 0, "-", "encoder_decoder"], [7, 0, 0, "-", "explanation"], [8, 0, 0, "-", "lorem"], [9, 0, 0, "-", "neighgen"], [10, 0, 0, "-", "rule"], [11, 0, 0, "-", "surrogate"], [12, 0, 0, "-", "util"]], "lore_sa.dataset": [[2, 1, 1, "", "DataSet"]], "lore_sa.dataset.DataSet": [[2, 2, 1, "", "get_class_values"], [2, 2, 1, "", "get_feature_map"], [2, 2, 1, "", "get_k"], [2, 2, 1, "", "get_numeric_columns"], [2, 2, 1, "", "get_original_dataset"], [2, 2, 1, "", "prepare_adult_dataset"], [2, 2, 1, "", "prepare_bank_dataset"], [2, 2, 1, "", "prepare_churn_dataset"], [2, 2, 1, "", "prepare_compass_dataset"], [2, 2, 1, "", "prepare_dataset"], [2, 2, 1, "", "prepare_fico_dataset"], [2, 2, 1, "", "prepare_german_dataset"], [2, 2, 1, "", "prepare_iris_dataset"], [2, 2, 1, "", "prepare_medical_dataset"], [2, 2, 1, "", "prepare_wine_dataset"], [2, 2, 1, "", "prepare_yeast_dataset"]], "lore_sa.decision_tree": [[2, 3, 1, "", "is_leaf"], [2, 3, 1, "", "learn_local_decision_tree"], [2, 3, 1, "", "prune_duplicate_leaves"], [2, 3, 1, "", "prune_index"]], "lore_sa.discretizer": [[2, 1, 1, "", "Discretizer"], [2, 1, 1, "", "RMEPDiscretizer"]], "lore_sa.discretizer.Discretizer": [[2, 2, 1, "", "fit"], [2, 2, 1, "", "transform"]], "lore_sa.discretizer.RMEPDiscretizer": [[2, 2, 1, "", "array_entropy"], [2, 2, 1, "", "fit"], [2, 2, 1, "", "recursive_partition"], [2, 2, 1, "", "transform"]], "lore_sa.encoder_decoder": [[2, 1, 1, "", "EncDec"], [2, 1, 1, "", "MyTargetEnc"], [2, 1, 1, "", "OneHotEnc"], [2, 4, 1, "", "extend"]], "lore_sa.encoder_decoder.EncDec": [[2, 2, 1, "", "dec"], [2, 2, 1, "", "enc"]], "lore_sa.encoder_decoder.MyTargetEnc": [[2, 2, 1, "", "dec"], [2, 2, 1, "", "enc"], [2, 2, 1, "", "enc_fit_transform"], [2, 2, 1, "", "get_cate_map"], [2, 2, 1, "", "inverse_transform"], [2, 2, 1, "", "retrieve_values"]], "lore_sa.encoder_decoder.OneHotEnc": [[2, 2, 1, "", "dec"], [2, 2, 1, "", "enc"], [2, 2, 1, "", "enc_fit_transform"]], "lore_sa.explanation": [[2, 1, 1, "", "Explanation"], [2, 1, 1, "", "ExplanationEncoder"], [2, 1, 1, "", "ImageExplanation"], [2, 1, 1, "", "MultilabelExplanation"], [2, 1, 1, "", "TextExplanation"], [2, 3, 1, "", "json2explanation"]], "lore_sa.explanation.Explanation": [[2, 2, 1, "", "cstr"], [2, 2, 1, "", "rstr"]], "lore_sa.explanation.ExplanationEncoder": [[2, 2, 1, "", "default"]], "lore_sa.explanation.ImageExplanation": [[2, 2, 1, "", "get_image_counterfactuals"], [2, 2, 1, "", "get_image_rule"]], "lore_sa.explanation.TextExplanation": [[2, 2, 1, "", "get_text_counterfactuals"], [2, 2, 1, "", "get_text_rule"]], "lore_sa.lorem": [[2, 1, 1, "", "LOREM"]], "lore_sa.lorem.LOREM": [[2, 2, 1, "", "explain_instance"], [2, 2, 1, "", "explain_set_instances_stable"], [2, 2, 1, "", "explain_workers_stable"], [2, 2, 1, "", "get_exemplars_cexemplars_binary"], [2, 2, 1, "", "get_exemplars_cexemplars_supert"], [2, 2, 1, "", "get_exemplars_str"], [2, 2, 1, "", "get_feature_importance_binary"], [2, 2, 1, "", "get_feature_importance_supert"], [2, 2, 1, "", "set_unfeasibible_features"]], "lore_sa.neighgen": [[2, 1, 1, "", "CFSGenerator"], [2, 1, 1, "", "ClosestInstancesGenerator"], [2, 1, 1, "", "CounterGenerator"], [2, 1, 1, "", "GeneticGenerator"], [2, 1, 1, "", "GeneticProbaGenerator"], [2, 1, 1, "", "NeighborhoodGenerator"], [2, 1, 1, "", "RandomGenerator"], [2, 1, 1, "", "RandomGeneticGenerator"], [2, 1, 1, "", "RandomGeneticProbaGenerator"]], "lore_sa.neighgen.CFSGenerator": [[2, 2, 1, "", "binary_sampling_search"], [2, 2, 1, "", "counterfactual_search"], [2, 2, 1, "", "gaussian_global_sampling"], [2, 2, 1, "", "gaussian_vicinity_sampling"], [2, 2, 1, "", "generate"], [2, 2, 1, "", "neighborhood_sampling"], [2, 2, 1, "", "translate"], [2, 2, 1, "", "uniform_sphere_origin"], [2, 2, 1, "", "uniform_sphere_scaled_vicinity_sampling"], [2, 2, 1, "", "uniform_sphere_vicinity_sampling"], [2, 2, 1, "", "vicinity_sampling"]], "lore_sa.neighgen.ClosestInstancesGenerator": [[2, 2, 1, "", "generate"]], "lore_sa.neighgen.CounterGenerator": [[2, 2, 1, "", "create_bins"], [2, 2, 1, "", "find_closest_counter"], [2, 2, 1, "", "find_in_possibilities"], [2, 2, 1, "", "for_loop_counter"], [2, 2, 1, "", "generate"]], "lore_sa.neighgen.GeneticGenerator": [[2, 2, 1, "", "add_halloffame"], [2, 2, 1, "", "clone"], [2, 2, 1, "", "fit"], [2, 2, 1, "", "fitness_equal"], [2, 2, 1, "", "fitness_notequal"], [2, 2, 1, "", "generate"], [2, 2, 1, "", "mutate"], [2, 2, 1, "", "random_init"], [2, 2, 1, "", "record_init"], [2, 2, 1, "", "setup_toolbox"], [2, 2, 1, "", "setup_toolbox_noteq"]], "lore_sa.neighgen.GeneticProbaGenerator": [[2, 2, 1, "", "fitness_equal"], [2, 2, 1, "", "fitness_equal_proba"], [2, 2, 1, "", "fitness_notequal"], [2, 2, 1, "", "fitness_notequal_proba"]], "lore_sa.neighgen.NeighborhoodGenerator": [[2, 2, 1, "", "apply_bb_predict"], [2, 2, 1, "", "apply_bb_predict_proba"], [2, 2, 1, "", "balance_neigh"], [2, 2, 1, "", "generate"], [2, 2, 1, "", "generate_synthetic_instance"], [2, 2, 1, "", "multi_generate"]], "lore_sa.neighgen.RandomGenerator": [[2, 2, 1, "", "generate"]], "lore_sa.neighgen.RandomGeneticGenerator": [[2, 2, 1, "", "generate"]], "lore_sa.neighgen.RandomGeneticProbaGenerator": [[2, 2, 1, "", "generate"]], "lore_sa.rule": [[2, 1, 1, "", "Condition"], [2, 1, 1, "", "ConditionEncoder"], [2, 1, 1, "", "NumpyEncoder"], [2, 1, 1, "", "Rule"], [2, 1, 1, "", "RuleEncoder"], [2, 3, 1, "", "apply_counterfactual"], [2, 3, 1, "", "apply_counterfactual_supert"], [2, 3, 1, "", "check_feasibility_of_falsified_conditions"], [2, 3, 1, "", "compact_premises"], [2, 3, 1, "", "get_counterfactual_rules"], [2, 3, 1, "", "get_counterfactual_rules_supert"], [2, 3, 1, "", "get_depth"], [2, 3, 1, "", "get_falsified_conditions"], [2, 3, 1, "", "get_rule"], [2, 3, 1, "", "get_rule_supert"], [2, 3, 1, "", "get_rules"], [2, 3, 1, "", "json2cond"], [2, 3, 1, "", "json2rule"]], "lore_sa.rule.ConditionEncoder": [[2, 2, 1, "", "default"]], "lore_sa.rule.NumpyEncoder": [[2, 2, 1, "", "default"]], "lore_sa.rule.Rule": [[2, 2, 1, "", "is_covered"]], "lore_sa.rule.RuleEncoder": [[2, 2, 1, "", "default"]], "lore_sa.surrogate": [[2, 1, 1, "", "DecTree"], [2, 1, 1, "", "SuperTree"], [2, 1, 1, "", "Surrogate"]], "lore_sa.surrogate.DecTree": [[2, 2, 1, "", "is_leaf"], [2, 2, 1, "", "learn_local_decision_tree"], [2, 2, 1, "", "prune_duplicate_leaves"], [2, 2, 1, "", "prune_index"]], "lore_sa.surrogate.SuperTree": [[2, 1, 1, "", "Node"], [2, 1, 1, "", "SuperNode"], [2, 2, 1, "", "check_size"], [2, 2, 1, "", "complexitiSuperTree"], [2, 2, 1, "", "complexityDecisionTree"], [2, 2, 1, "", "computeBranch"], [2, 2, 1, "", "is_leaf"], [2, 2, 1, "", "mergeDecisionTrees"], [2, 2, 1, "", "pruneRedundant"], [2, 2, 1, "", "prune_duplicate_leaves"], [2, 2, 1, "", "prune_index"], [2, 2, 1, "", "prune_tree"], [2, 2, 1, "", "rec_buildTree"], [2, 2, 1, "", "supert2b"], [2, 2, 1, "", "supert2binary"]], "lore_sa.surrogate.SuperTree.Node": [[2, 2, 1, "", "predict"], [2, 2, 1, "", "print_tree"]], "lore_sa.surrogate.SuperTree.SuperNode": [[2, 2, 1, "", "apply"], [2, 2, 1, "", "calculate_all_importances"], [2, 2, 1, "", "calculate_features_importance"], [2, 2, 1, "", "calculate_fi_path"], [2, 2, 1, "", "decision_path_indices"], [2, 2, 1, "", "predict"], [2, 2, 1, "", "print_superTree"], [2, 2, 1, "", "set_impurity"]], "lore_sa.util": [[2, 3, 1, "", "best_fit_distribution"], [2, 3, 1, "", "calculate_feature_values"], [2, 3, 1, "", "estimate_nbr_bins"], [2, 3, 1, "", "freedman_diaconis"], [2, 3, 1, "", "get_distr_values"], [2, 3, 1, "", "mixed_distance_idx"], [2, 3, 1, "", "multi_dt_predict"], [2, 3, 1, "", "multilabel2str"], [2, 3, 1, "", "neuclidean"], [2, 3, 1, "", "nmeandev"], [2, 3, 1, "", "record2str"], [2, 3, 1, "", "sigmoid"], [2, 3, 1, "", "struges"], [2, 3, 1, "", "vector2dict"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "data", "Python data"]}, "titleterms": {"learn": 0, "explain": 0, "german": 0, "credit": 0, "dataset": [0, 2, 3], "load": 0, "prepar": 0, "data": 0, "random": 0, "forest": 0, "classfier": 0, "predict": 0, "shap": 0, "lore": 0, "lime": 0, "differ": 0, "model": 0, "logist": 0, "regressor": 0, "lore_sa": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "indic": 1, "tabl": 1, "packag": 2, "submodul": 2, "modul": [2, 13], "decision_tre": [2, 4], "discret": [2, 5], "encoder_decod": [2, 6], "explan": [2, 7], "lorem": [2, 8], "neighgen": [2, 9], "rule": [2, 10], "surrog": [2, 11], "util": [2, 12], "content": 2}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Learning and explaining German Credit Dataset": [[0, "learning-and-explaining-german-credit-dataset"]], "Loading and preparation of data": [[0, "loading-and-preparation-of-data"]], "Learning a Random Forest classfier": [[0, "learning-a-random-forest-classfier"]], "Explaining the prediction": [[0, "explaining-the-prediction"], [0, "id1"]], "SHAP explainer": [[0, "shap-explainer"]], "LORE explainer": [[0, "lore-explainer"], [0, "id2"]], "LIME explainer": [[0, "lime-explainer"], [0, "id3"]], "Learning a different model": [[0, "learning-a-different-model"]], "Learning a Logistic Regressor": [[0, "learning-a-logistic-regressor"]], "lore_sa": [[1, "lore-sa"]], "Indices and tables": [[1, "indices-and-tables"]], "lore_sa package": [[2, "lore-sa-package"]], "Submodules": [[2, "submodules"]], "lore_sa.dataset module": [[2, "module-lore_sa.dataset"]], "lore_sa.decision_tree module": [[2, "module-lore_sa.decision_tree"]], "lore_sa.discretizer module": [[2, "module-lore_sa.discretizer"]], "lore_sa.encoder_decoder module": [[2, "module-lore_sa.encoder_decoder"]], "lore_sa.explanation module": [[2, "module-lore_sa.explanation"]], "lore_sa.lorem module": [[2, "module-lore_sa.lorem"]], "lore_sa.neighgen module": [[2, "module-lore_sa.neighgen"]], "lore_sa.rule module": [[2, "module-lore_sa.rule"]], "lore_sa.surrogate module": [[2, "module-lore_sa.surrogate"]], "lore_sa.util module": [[2, "module-lore_sa.util"]], "Module contents": [[2, "module-lore_sa"]], "lore_sa.dataset": [[3, "module-lore_sa.dataset"]], "lore_sa.decision_tree": [[4, "module-lore_sa.decision_tree"]], "lore_sa.discretizer": [[5, "module-lore_sa.discretizer"]], "lore_sa.encoder_decoder": [[6, "module-lore_sa.encoder_decoder"]], "lore_sa.explanation": [[7, "module-lore_sa.explanation"]], "lore_sa.lorem": [[8, "module-lore_sa.lorem"]], "lore_sa.neighgen": [[9, "module-lore_sa.neighgen"]], "lore_sa.rule": [[10, "module-lore_sa.rule"]], "lore_sa.surrogate": [[11, "module-lore_sa.surrogate"]], "lore_sa.util": [[12, "module-lore_sa.util"]], "Modules": [[13, "modules"]]}, "indexentries": {"cfsgenerator (class in lore_sa.neighgen)": [[2, "lore_sa.neighgen.CFSGenerator"]], "closestinstancesgenerator (class in lore_sa.neighgen)": [[2, "lore_sa.neighgen.ClosestInstancesGenerator"]], "condition (class in lore_sa.rule)": [[2, "lore_sa.rule.Condition"]], "conditionencoder (class in lore_sa.rule)": [[2, "lore_sa.rule.ConditionEncoder"]], "countergenerator (class in lore_sa.neighgen)": [[2, "lore_sa.neighgen.CounterGenerator"]], "dataset (class in lore_sa.dataset)": [[2, "lore_sa.dataset.DataSet"]], "dectree (class in lore_sa.surrogate)": [[2, "lore_sa.surrogate.DecTree"]], "discretizer (class in lore_sa.discretizer)": [[2, "lore_sa.discretizer.Discretizer"]], "encdec (class in lore_sa.encoder_decoder)": [[2, "lore_sa.encoder_decoder.EncDec"]], "explanation (class in lore_sa.explanation)": [[2, "lore_sa.explanation.Explanation"]], "explanationencoder (class in lore_sa.explanation)": [[2, "lore_sa.explanation.ExplanationEncoder"]], "geneticgenerator (class in lore_sa.neighgen)": [[2, "lore_sa.neighgen.GeneticGenerator"]], "geneticprobagenerator (class in lore_sa.neighgen)": [[2, "lore_sa.neighgen.GeneticProbaGenerator"]], "imageexplanation (class in lore_sa.explanation)": [[2, "lore_sa.explanation.ImageExplanation"]], "lorem (class in lore_sa.lorem)": [[2, "lore_sa.lorem.LOREM"]], "multilabelexplanation (class in lore_sa.explanation)": [[2, "lore_sa.explanation.MultilabelExplanation"]], "mytargetenc (class in lore_sa.encoder_decoder)": [[2, "lore_sa.encoder_decoder.MyTargetEnc"]], "neighborhoodgenerator (class in lore_sa.neighgen)": [[2, "lore_sa.neighgen.NeighborhoodGenerator"]], "numpyencoder (class in lore_sa.rule)": [[2, "lore_sa.rule.NumpyEncoder"]], "onehotenc (class in lore_sa.encoder_decoder)": [[2, "lore_sa.encoder_decoder.OneHotEnc"]], "rmepdiscretizer (class in lore_sa.discretizer)": [[2, "lore_sa.discretizer.RMEPDiscretizer"]], "randomgenerator (class in lore_sa.neighgen)": [[2, "lore_sa.neighgen.RandomGenerator"]], "randomgeneticgenerator (class in lore_sa.neighgen)": [[2, "lore_sa.neighgen.RandomGeneticGenerator"]], "randomgeneticprobagenerator (class in lore_sa.neighgen)": [[2, "lore_sa.neighgen.RandomGeneticProbaGenerator"]], "rule (class in lore_sa.rule)": [[2, "lore_sa.rule.Rule"]], "ruleencoder (class in lore_sa.rule)": [[2, "lore_sa.rule.RuleEncoder"]], "supertree (class in lore_sa.surrogate)": [[2, "lore_sa.surrogate.SuperTree"]], "supertree.node (class in lore_sa.surrogate)": [[2, "lore_sa.surrogate.SuperTree.Node"]], "supertree.supernode (class in lore_sa.surrogate)": [[2, "lore_sa.surrogate.SuperTree.SuperNode"]], "surrogate (class in lore_sa.surrogate)": [[2, "lore_sa.surrogate.Surrogate"]], "textexplanation (class in lore_sa.explanation)": [[2, "lore_sa.explanation.TextExplanation"]], "add_halloffame() (lore_sa.neighgen.geneticgenerator method)": [[2, "lore_sa.neighgen.GeneticGenerator.add_halloffame"]], "apply() (lore_sa.surrogate.supertree.supernode method)": [[2, "lore_sa.surrogate.SuperTree.SuperNode.apply"]], "apply_bb_predict() (lore_sa.neighgen.neighborhoodgenerator method)": [[2, "lore_sa.neighgen.NeighborhoodGenerator.apply_bb_predict"]], "apply_bb_predict_proba() (lore_sa.neighgen.neighborhoodgenerator method)": [[2, "lore_sa.neighgen.NeighborhoodGenerator.apply_bb_predict_proba"]], "apply_counterfactual() (in module lore_sa.rule)": [[2, "lore_sa.rule.apply_counterfactual"]], "apply_counterfactual_supert() (in module lore_sa.rule)": [[2, "lore_sa.rule.apply_counterfactual_supert"]], "array_entropy() (lore_sa.discretizer.rmepdiscretizer method)": [[2, "lore_sa.discretizer.RMEPDiscretizer.array_entropy"]], "balance_neigh() (lore_sa.neighgen.neighborhoodgenerator method)": [[2, "lore_sa.neighgen.NeighborhoodGenerator.balance_neigh"]], "best_fit_distribution() (in module lore_sa.util)": [[2, "lore_sa.util.best_fit_distribution"]], "binary_sampling_search() (lore_sa.neighgen.cfsgenerator method)": [[2, "lore_sa.neighgen.CFSGenerator.binary_sampling_search"]], "calculate_all_importances() (lore_sa.surrogate.supertree.supernode method)": [[2, "lore_sa.surrogate.SuperTree.SuperNode.calculate_all_importances"]], "calculate_feature_values() (in module lore_sa.util)": [[2, "lore_sa.util.calculate_feature_values"]], "calculate_features_importance() (lore_sa.surrogate.supertree.supernode method)": [[2, "lore_sa.surrogate.SuperTree.SuperNode.calculate_features_importance"]], "calculate_fi_path() (lore_sa.surrogate.supertree.supernode method)": [[2, "lore_sa.surrogate.SuperTree.SuperNode.calculate_fi_path"]], "check_feasibility_of_falsified_conditions() (in module lore_sa.rule)": [[2, "lore_sa.rule.check_feasibility_of_falsified_conditions"]], "check_size() (lore_sa.surrogate.supertree method)": [[2, "lore_sa.surrogate.SuperTree.check_size"]], "clone() (lore_sa.neighgen.geneticgenerator method)": [[2, "lore_sa.neighgen.GeneticGenerator.clone"]], "compact_premises() (in module lore_sa.rule)": [[2, "lore_sa.rule.compact_premises"]], "complexitisupertree() (lore_sa.surrogate.supertree method)": [[2, "lore_sa.surrogate.SuperTree.complexitiSuperTree"]], "complexitydecisiontree() (lore_sa.surrogate.supertree method)": [[2, "lore_sa.surrogate.SuperTree.complexityDecisionTree"]], "computebranch() (lore_sa.surrogate.supertree method)": [[2, "lore_sa.surrogate.SuperTree.computeBranch"]], "counterfactual_search() (lore_sa.neighgen.cfsgenerator method)": [[2, "lore_sa.neighgen.CFSGenerator.counterfactual_search"]], "create_bins() (lore_sa.neighgen.countergenerator method)": [[2, "lore_sa.neighgen.CounterGenerator.create_bins"]], "cstr() (lore_sa.explanation.explanation method)": [[2, "lore_sa.explanation.Explanation.cstr"]], "dec() (lore_sa.encoder_decoder.encdec method)": [[2, "lore_sa.encoder_decoder.EncDec.dec"]], "dec() (lore_sa.encoder_decoder.mytargetenc method)": [[2, "lore_sa.encoder_decoder.MyTargetEnc.dec"]], "dec() (lore_sa.encoder_decoder.onehotenc method)": [[2, "lore_sa.encoder_decoder.OneHotEnc.dec"]], "decision_path_indices() (lore_sa.surrogate.supertree.supernode method)": [[2, "lore_sa.surrogate.SuperTree.SuperNode.decision_path_indices"]], "default() (lore_sa.explanation.explanationencoder method)": [[2, "lore_sa.explanation.ExplanationEncoder.default"]], "default() (lore_sa.rule.conditionencoder method)": [[2, "lore_sa.rule.ConditionEncoder.default"]], "default() (lore_sa.rule.numpyencoder method)": [[2, "lore_sa.rule.NumpyEncoder.default"]], "default() (lore_sa.rule.ruleencoder method)": [[2, "lore_sa.rule.RuleEncoder.default"]], "enc() (lore_sa.encoder_decoder.encdec method)": [[2, "lore_sa.encoder_decoder.EncDec.enc"]], "enc() (lore_sa.encoder_decoder.mytargetenc method)": [[2, "lore_sa.encoder_decoder.MyTargetEnc.enc"]], "enc() (lore_sa.encoder_decoder.onehotenc method)": [[2, "lore_sa.encoder_decoder.OneHotEnc.enc"]], "enc_fit_transform() (lore_sa.encoder_decoder.mytargetenc method)": [[2, "lore_sa.encoder_decoder.MyTargetEnc.enc_fit_transform"]], "enc_fit_transform() (lore_sa.encoder_decoder.onehotenc method)": [[2, "lore_sa.encoder_decoder.OneHotEnc.enc_fit_transform"]], "estimate_nbr_bins() (in module lore_sa.util)": [[2, "lore_sa.util.estimate_nbr_bins"]], "explain_instance() (lore_sa.lorem.lorem method)": [[2, "lore_sa.lorem.LOREM.explain_instance"]], "explain_set_instances_stable() (lore_sa.lorem.lorem method)": [[2, "lore_sa.lorem.LOREM.explain_set_instances_stable"]], "explain_workers_stable() (lore_sa.lorem.lorem method)": [[2, "lore_sa.lorem.LOREM.explain_workers_stable"]], "extend (in module lore_sa.encoder_decoder)": [[2, "lore_sa.encoder_decoder.extend"]], "find_closest_counter() (lore_sa.neighgen.countergenerator method)": [[2, "lore_sa.neighgen.CounterGenerator.find_closest_counter"]], "find_in_possibilities() (lore_sa.neighgen.countergenerator method)": [[2, "lore_sa.neighgen.CounterGenerator.find_in_possibilities"]], "fit() (lore_sa.discretizer.discretizer method)": [[2, "lore_sa.discretizer.Discretizer.fit"]], "fit() (lore_sa.discretizer.rmepdiscretizer method)": [[2, "lore_sa.discretizer.RMEPDiscretizer.fit"]], "fit() (lore_sa.neighgen.geneticgenerator method)": [[2, "lore_sa.neighgen.GeneticGenerator.fit"]], "fitness_equal() (lore_sa.neighgen.geneticgenerator method)": [[2, "lore_sa.neighgen.GeneticGenerator.fitness_equal"]], "fitness_equal() (lore_sa.neighgen.geneticprobagenerator method)": [[2, "lore_sa.neighgen.GeneticProbaGenerator.fitness_equal"]], "fitness_equal_proba() (lore_sa.neighgen.geneticprobagenerator method)": [[2, "lore_sa.neighgen.GeneticProbaGenerator.fitness_equal_proba"]], "fitness_notequal() (lore_sa.neighgen.geneticgenerator method)": [[2, "lore_sa.neighgen.GeneticGenerator.fitness_notequal"]], "fitness_notequal() (lore_sa.neighgen.geneticprobagenerator method)": [[2, "lore_sa.neighgen.GeneticProbaGenerator.fitness_notequal"]], "fitness_notequal_proba() (lore_sa.neighgen.geneticprobagenerator method)": [[2, "lore_sa.neighgen.GeneticProbaGenerator.fitness_notequal_proba"]], "for_loop_counter() (lore_sa.neighgen.countergenerator method)": [[2, "lore_sa.neighgen.CounterGenerator.for_loop_counter"]], "freedman_diaconis() (in module lore_sa.util)": [[2, "lore_sa.util.freedman_diaconis"]], "gaussian_global_sampling() (lore_sa.neighgen.cfsgenerator method)": [[2, "lore_sa.neighgen.CFSGenerator.gaussian_global_sampling"]], "gaussian_vicinity_sampling() (lore_sa.neighgen.cfsgenerator method)": [[2, "lore_sa.neighgen.CFSGenerator.gaussian_vicinity_sampling"]], "generate() (lore_sa.neighgen.cfsgenerator method)": [[2, "lore_sa.neighgen.CFSGenerator.generate"]], "generate() (lore_sa.neighgen.closestinstancesgenerator method)": [[2, "lore_sa.neighgen.ClosestInstancesGenerator.generate"]], "generate() (lore_sa.neighgen.countergenerator method)": [[2, "lore_sa.neighgen.CounterGenerator.generate"]], "generate() (lore_sa.neighgen.geneticgenerator method)": [[2, "lore_sa.neighgen.GeneticGenerator.generate"]], "generate() (lore_sa.neighgen.neighborhoodgenerator method)": [[2, "lore_sa.neighgen.NeighborhoodGenerator.generate"]], "generate() (lore_sa.neighgen.randomgenerator method)": [[2, "lore_sa.neighgen.RandomGenerator.generate"]], "generate() (lore_sa.neighgen.randomgeneticgenerator method)": [[2, "lore_sa.neighgen.RandomGeneticGenerator.generate"]], "generate() (lore_sa.neighgen.randomgeneticprobagenerator method)": [[2, "lore_sa.neighgen.RandomGeneticProbaGenerator.generate"]], "generate_synthetic_instance() (lore_sa.neighgen.neighborhoodgenerator method)": [[2, "lore_sa.neighgen.NeighborhoodGenerator.generate_synthetic_instance"]], "get_cate_map() (lore_sa.encoder_decoder.mytargetenc method)": [[2, "lore_sa.encoder_decoder.MyTargetEnc.get_cate_map"]], "get_class_values() (lore_sa.dataset.dataset method)": [[2, "lore_sa.dataset.DataSet.get_class_values"]], "get_counterfactual_rules() (in module lore_sa.rule)": [[2, "lore_sa.rule.get_counterfactual_rules"]], "get_counterfactual_rules_supert() (in module lore_sa.rule)": [[2, "lore_sa.rule.get_counterfactual_rules_supert"]], "get_depth() (in module lore_sa.rule)": [[2, "lore_sa.rule.get_depth"]], "get_distr_values() (in module lore_sa.util)": [[2, "lore_sa.util.get_distr_values"]], "get_exemplars_cexemplars_binary() (lore_sa.lorem.lorem method)": [[2, "lore_sa.lorem.LOREM.get_exemplars_cexemplars_binary"]], "get_exemplars_cexemplars_supert() (lore_sa.lorem.lorem method)": [[2, "lore_sa.lorem.LOREM.get_exemplars_cexemplars_supert"]], "get_exemplars_str() (lore_sa.lorem.lorem method)": [[2, "lore_sa.lorem.LOREM.get_exemplars_str"]], "get_falsified_conditions() (in module lore_sa.rule)": [[2, "lore_sa.rule.get_falsified_conditions"]], "get_feature_importance_binary() (lore_sa.lorem.lorem method)": [[2, "lore_sa.lorem.LOREM.get_feature_importance_binary"]], "get_feature_importance_supert() (lore_sa.lorem.lorem method)": [[2, "lore_sa.lorem.LOREM.get_feature_importance_supert"]], "get_feature_map() (lore_sa.dataset.dataset method)": [[2, "lore_sa.dataset.DataSet.get_feature_map"]], "get_image_counterfactuals() (lore_sa.explanation.imageexplanation method)": [[2, "lore_sa.explanation.ImageExplanation.get_image_counterfactuals"]], "get_image_rule() (lore_sa.explanation.imageexplanation method)": [[2, "lore_sa.explanation.ImageExplanation.get_image_rule"]], "get_k() (lore_sa.dataset.dataset method)": [[2, "lore_sa.dataset.DataSet.get_k"]], "get_numeric_columns() (lore_sa.dataset.dataset method)": [[2, "lore_sa.dataset.DataSet.get_numeric_columns"]], "get_original_dataset() (lore_sa.dataset.dataset method)": [[2, "lore_sa.dataset.DataSet.get_original_dataset"]], "get_rule() (in module lore_sa.rule)": [[2, "lore_sa.rule.get_rule"]], "get_rule_supert() (in module lore_sa.rule)": [[2, "lore_sa.rule.get_rule_supert"]], "get_rules() (in module lore_sa.rule)": [[2, "lore_sa.rule.get_rules"]], "get_text_counterfactuals() (lore_sa.explanation.textexplanation method)": [[2, "lore_sa.explanation.TextExplanation.get_text_counterfactuals"]], "get_text_rule() (lore_sa.explanation.textexplanation method)": [[2, "lore_sa.explanation.TextExplanation.get_text_rule"]], "inverse_transform() (lore_sa.encoder_decoder.mytargetenc method)": [[2, "lore_sa.encoder_decoder.MyTargetEnc.inverse_transform"]], "is_covered() (lore_sa.rule.rule method)": [[2, "lore_sa.rule.Rule.is_covered"]], "is_leaf() (in module lore_sa.decision_tree)": [[2, "lore_sa.decision_tree.is_leaf"]], "is_leaf() (lore_sa.surrogate.dectree method)": [[2, "lore_sa.surrogate.DecTree.is_leaf"]], "is_leaf() (lore_sa.surrogate.supertree method)": [[2, "lore_sa.surrogate.SuperTree.is_leaf"]], "json2cond() (in module lore_sa.rule)": [[2, "lore_sa.rule.json2cond"]], "json2explanation() (in module lore_sa.explanation)": [[2, "lore_sa.explanation.json2explanation"]], "json2rule() (in module lore_sa.rule)": [[2, "lore_sa.rule.json2rule"]], "learn_local_decision_tree() (in module lore_sa.decision_tree)": [[2, "lore_sa.decision_tree.learn_local_decision_tree"]], "learn_local_decision_tree() (lore_sa.surrogate.dectree method)": [[2, "lore_sa.surrogate.DecTree.learn_local_decision_tree"]], "lore_sa": [[2, "module-lore_sa"]], "lore_sa.dataset": [[2, "module-lore_sa.dataset"], [3, "module-lore_sa.dataset"]], "lore_sa.decision_tree": [[2, "module-lore_sa.decision_tree"], [4, "module-lore_sa.decision_tree"]], "lore_sa.discretizer": [[2, "module-lore_sa.discretizer"], [5, "module-lore_sa.discretizer"]], "lore_sa.encoder_decoder": [[2, "module-lore_sa.encoder_decoder"], [6, "module-lore_sa.encoder_decoder"]], "lore_sa.explanation": [[2, "module-lore_sa.explanation"], [7, "module-lore_sa.explanation"]], "lore_sa.lorem": [[2, "module-lore_sa.lorem"], [8, "module-lore_sa.lorem"]], "lore_sa.neighgen": [[2, "module-lore_sa.neighgen"], [9, "module-lore_sa.neighgen"]], "lore_sa.rule": [[2, "module-lore_sa.rule"], [10, "module-lore_sa.rule"]], "lore_sa.surrogate": [[2, "module-lore_sa.surrogate"], [11, "module-lore_sa.surrogate"]], "lore_sa.util": [[2, "module-lore_sa.util"], [12, "module-lore_sa.util"]], "mergedecisiontrees() (lore_sa.surrogate.supertree method)": [[2, "lore_sa.surrogate.SuperTree.mergeDecisionTrees"]], "mixed_distance_idx() (in module lore_sa.util)": [[2, "lore_sa.util.mixed_distance_idx"]], "module": [[2, "module-lore_sa"], [2, "module-lore_sa.dataset"], [2, "module-lore_sa.decision_tree"], [2, "module-lore_sa.discretizer"], [2, "module-lore_sa.encoder_decoder"], [2, "module-lore_sa.explanation"], [2, "module-lore_sa.lorem"], [2, "module-lore_sa.neighgen"], [2, "module-lore_sa.rule"], [2, "module-lore_sa.surrogate"], [2, "module-lore_sa.util"], [3, "module-lore_sa.dataset"], [4, "module-lore_sa.decision_tree"], [5, "module-lore_sa.discretizer"], [6, "module-lore_sa.encoder_decoder"], [7, "module-lore_sa.explanation"], [8, "module-lore_sa.lorem"], [9, "module-lore_sa.neighgen"], [10, "module-lore_sa.rule"], [11, "module-lore_sa.surrogate"], [12, "module-lore_sa.util"]], "multi_dt_predict() (in module lore_sa.util)": [[2, "lore_sa.util.multi_dt_predict"]], "multi_generate() (lore_sa.neighgen.neighborhoodgenerator method)": [[2, "lore_sa.neighgen.NeighborhoodGenerator.multi_generate"]], "multilabel2str() (in module lore_sa.util)": [[2, "lore_sa.util.multilabel2str"]], "mutate() (lore_sa.neighgen.geneticgenerator method)": [[2, "lore_sa.neighgen.GeneticGenerator.mutate"]], "neighborhood_sampling() (lore_sa.neighgen.cfsgenerator method)": [[2, "lore_sa.neighgen.CFSGenerator.neighborhood_sampling"]], "neuclidean() (in module lore_sa.util)": [[2, "lore_sa.util.neuclidean"]], "nmeandev() (in module lore_sa.util)": [[2, "lore_sa.util.nmeandev"]], "predict() (lore_sa.surrogate.supertree.node method)": [[2, "lore_sa.surrogate.SuperTree.Node.predict"]], "predict() (lore_sa.surrogate.supertree.supernode method)": [[2, "lore_sa.surrogate.SuperTree.SuperNode.predict"]], "prepare_adult_dataset() (lore_sa.dataset.dataset method)": [[2, "lore_sa.dataset.DataSet.prepare_adult_dataset"]], "prepare_bank_dataset() (lore_sa.dataset.dataset method)": [[2, "lore_sa.dataset.DataSet.prepare_bank_dataset"]], "prepare_churn_dataset() (lore_sa.dataset.dataset method)": [[2, "lore_sa.dataset.DataSet.prepare_churn_dataset"]], "prepare_compass_dataset() (lore_sa.dataset.dataset method)": [[2, "lore_sa.dataset.DataSet.prepare_compass_dataset"]], "prepare_dataset() (lore_sa.dataset.dataset method)": [[2, "lore_sa.dataset.DataSet.prepare_dataset"]], "prepare_fico_dataset() (lore_sa.dataset.dataset method)": [[2, "lore_sa.dataset.DataSet.prepare_fico_dataset"]], "prepare_german_dataset() (lore_sa.dataset.dataset method)": [[2, "lore_sa.dataset.DataSet.prepare_german_dataset"]], "prepare_iris_dataset() (lore_sa.dataset.dataset method)": [[2, "lore_sa.dataset.DataSet.prepare_iris_dataset"]], "prepare_medical_dataset() (lore_sa.dataset.dataset method)": [[2, "lore_sa.dataset.DataSet.prepare_medical_dataset"]], "prepare_wine_dataset() (lore_sa.dataset.dataset method)": [[2, "lore_sa.dataset.DataSet.prepare_wine_dataset"]], "prepare_yeast_dataset() (lore_sa.dataset.dataset method)": [[2, "lore_sa.dataset.DataSet.prepare_yeast_dataset"]], "print_supertree() (lore_sa.surrogate.supertree.supernode method)": [[2, "lore_sa.surrogate.SuperTree.SuperNode.print_superTree"]], "print_tree() (lore_sa.surrogate.supertree.node method)": [[2, "lore_sa.surrogate.SuperTree.Node.print_tree"]], "pruneredundant() (lore_sa.surrogate.supertree method)": [[2, "lore_sa.surrogate.SuperTree.pruneRedundant"]], "prune_duplicate_leaves() (in module lore_sa.decision_tree)": [[2, "lore_sa.decision_tree.prune_duplicate_leaves"]], "prune_duplicate_leaves() (lore_sa.surrogate.dectree method)": [[2, "lore_sa.surrogate.DecTree.prune_duplicate_leaves"]], "prune_duplicate_leaves() (lore_sa.surrogate.supertree method)": [[2, "lore_sa.surrogate.SuperTree.prune_duplicate_leaves"]], "prune_index() (in module lore_sa.decision_tree)": [[2, "lore_sa.decision_tree.prune_index"]], "prune_index() (lore_sa.surrogate.dectree method)": [[2, "lore_sa.surrogate.DecTree.prune_index"]], "prune_index() (lore_sa.surrogate.supertree method)": [[2, "lore_sa.surrogate.SuperTree.prune_index"]], "prune_tree() (lore_sa.surrogate.supertree method)": [[2, "lore_sa.surrogate.SuperTree.prune_tree"]], "random_init() (lore_sa.neighgen.geneticgenerator method)": [[2, "lore_sa.neighgen.GeneticGenerator.random_init"]], "rec_buildtree() (lore_sa.surrogate.supertree method)": [[2, "lore_sa.surrogate.SuperTree.rec_buildTree"]], "record2str() (in module lore_sa.util)": [[2, "lore_sa.util.record2str"]], "record_init() (lore_sa.neighgen.geneticgenerator method)": [[2, "lore_sa.neighgen.GeneticGenerator.record_init"]], "recursive_partition() (lore_sa.discretizer.rmepdiscretizer method)": [[2, "lore_sa.discretizer.RMEPDiscretizer.recursive_partition"]], "retrieve_values() (lore_sa.encoder_decoder.mytargetenc method)": [[2, "lore_sa.encoder_decoder.MyTargetEnc.retrieve_values"]], "rstr() (lore_sa.explanation.explanation method)": [[2, "lore_sa.explanation.Explanation.rstr"]], "set_impurity() (lore_sa.surrogate.supertree.supernode method)": [[2, "lore_sa.surrogate.SuperTree.SuperNode.set_impurity"]], "set_unfeasibible_features() (lore_sa.lorem.lorem method)": [[2, "lore_sa.lorem.LOREM.set_unfeasibible_features"]], "setup_toolbox() (lore_sa.neighgen.geneticgenerator method)": [[2, "lore_sa.neighgen.GeneticGenerator.setup_toolbox"]], "setup_toolbox_noteq() (lore_sa.neighgen.geneticgenerator method)": [[2, "lore_sa.neighgen.GeneticGenerator.setup_toolbox_noteq"]], "sigmoid() (in module lore_sa.util)": [[2, "lore_sa.util.sigmoid"]], "struges() (in module lore_sa.util)": [[2, "lore_sa.util.struges"]], "supert2b() (lore_sa.surrogate.supertree method)": [[2, "lore_sa.surrogate.SuperTree.supert2b"]], "supert2binary() (lore_sa.surrogate.supertree method)": [[2, "lore_sa.surrogate.SuperTree.supert2binary"]], "transform() (lore_sa.discretizer.discretizer method)": [[2, "lore_sa.discretizer.Discretizer.transform"]], "transform() (lore_sa.discretizer.rmepdiscretizer method)": [[2, "lore_sa.discretizer.RMEPDiscretizer.transform"]], "translate() (lore_sa.neighgen.cfsgenerator method)": [[2, "lore_sa.neighgen.CFSGenerator.translate"]], "uniform_sphere_origin() (lore_sa.neighgen.cfsgenerator method)": [[2, "lore_sa.neighgen.CFSGenerator.uniform_sphere_origin"]], "uniform_sphere_scaled_vicinity_sampling() (lore_sa.neighgen.cfsgenerator method)": [[2, "lore_sa.neighgen.CFSGenerator.uniform_sphere_scaled_vicinity_sampling"]], "uniform_sphere_vicinity_sampling() (lore_sa.neighgen.cfsgenerator method)": [[2, "lore_sa.neighgen.CFSGenerator.uniform_sphere_vicinity_sampling"]], "vector2dict() (in module lore_sa.util)": [[2, "lore_sa.util.vector2dict"]], "vicinity_sampling() (lore_sa.neighgen.cfsgenerator method)": [[2, "lore_sa.neighgen.CFSGenerator.vicinity_sampling"]]}})